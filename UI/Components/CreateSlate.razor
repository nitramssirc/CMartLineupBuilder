@using Application.Commands
@using Common.Enums
@using Domain.SlateAggregate.ValueTypes
@using MediatR
<RadzenStack Orientation="Orientation.Vertical" class="rz-p-4">
    <RadzenRow>
        <RadzenColumn>
            <RadzenLabel Text="Sport" Component="Sport" />
        </RadzenColumn>
        <RadzenColumn>
            <RadzenDropDown Name="Sport" @bind-Value="SelectedSport" Data="Sports" />
            <RadzenRequiredValidator Component="Sport" Text="Sport is required" />
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
        <RadzenColumn SizeMD="4">
            <RadzenLabel Text="DFS Site" Component="Site" />
        </RadzenColumn>
        <RadzenColumn>
            <RadzenDropDown Name="Site" @bind-Value="SelectedSite" Data="Sites" />
            <RadzenRequiredValidator Component="Site" Text="Site is required" />
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
        <RadzenColumn SizeMD="4">
            <RadzenLabel Text="Game Type" Component="GameType" />
        </RadzenColumn>
        <RadzenColumn>
            <RadzenDropDown Name="GameType" @bind-Value="SelectedGameType" Data="GameTypes" />
            <RadzenRequiredValidator Component="GameType" Text="Game Type is required" />
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
        <RadzenColumn SizeMD="4">
            <RadzenLabel Text="Name" Component="Name" />
        </RadzenColumn>
        <RadzenColumn>
            <RadzenTextBox Name="Name" @bind-Value="Name" MaxLength="100" />
            <RadzenRequiredValidator Component="Name" Text="Name is required" />
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
        <RadzenColumn SizeMD="4">
            <RadzenButton Click=@(args => OnAddSlateClick()) Text="Add Slate" ButtonStyle="Radzen.ButtonStyle.Primary" />
        </RadzenColumn>
    </RadzenRow>
</RadzenStack>

@code {
    [Inject] IMediator Mediator { get; set; } = null!;

    [Parameter] public EventCallback<SlateID> OnSlateAdded { get; set; }

    private Sport SelectedSport { get; set; }
    private DFSSite SelectedSite { get; set; }
    private GameType SelectedGameType { get; set; }
    private string Name { get; set; } = string.Empty;

    private List<Sport> Sports { get; } = Enum.GetValues(typeof(Sport)).Cast<Sport>().ToList();
    private List<DFSSite> Sites { get; } = Enum.GetValues(typeof(DFSSite)).Cast<DFSSite>().ToList();
    private List<GameType> GameTypes { get; } = Enum.GetValues(typeof(GameType)).Cast<GameType>().ToList();

    private async Task OnAddSlateClick()
    {
        var createSlateRequest = new CreateSlateRequest(
            SelectedSport,
            SelectedSite,
            SelectedGameType,
            Name
        );
        var response = await Mediator.Send(createSlateRequest);

        await OnSlateAdded.InvokeAsync(response.NewId);
    }
}